CREATE TABLE "products" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar UNIQUE NOT NULL,
  "price_int" integer NOT NULL,
  "price_dec" integer DEFAULT 0,
  "label_id" integer DEFAULT null,
  "images" varchar[] DEFAULT null,
  "description" text DEFAULT null,
  "characteristics" text DEFAULT null,
  "in_stock" bool NOT NULL
);

CREATE TABLE "labels" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar UNIQUE NOT NULL
);

CREATE TABLE "categories" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar UNIQUE NOT NULL,
  "slug" varchar UNIQUE NOT NULL,
  "img_url" varchar DEFAULT NULL
);

CREATE TABLE "product_categories" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "product_id" integer NOT NULL,
  "category_id" integer NOT NULL
);

CREATE TABLE "users" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "username" varchar UNIQUE NOT NULL,
  "email" varchar UNIQUE NOT NULL,
  "is_admin" bool DEFAULT false,
  "password" varchar NOT NULL,
  "created_at" timestamp DEFAULT (now())
);

CREATE TABLE "comments" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" integer NOT NULL,
  "name" varchar NOT NULL,
  "text" text NOT NULL,
  "created_at" timestamp DEFAULT (now())
);

CREATE TABLE "orders" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" integer NOT NULL,
  "product_count" integer NOT NULL,
  "price_int" integer NOT NULL,
  "price_dec" integer DEFAULT 0,
  "delivery_price_int" integer NOT NULL,
  "delivery_price_dec" integer DEFAULT 0,
  "total_int" integer NOT NULL,
  "total_dec" integer DEFAULT 0,
  "country_id" integer NOT NULL,
  "district" varchar NOT NULL,
  "city" varchar NOT NULL,
  "postal_code" integer NOT NULL,
  "delivery_method_id" integer NOT NULL,
  "payment_method_id" integer NOT NULL,
  "customer_firstname" varchar NOT NULL,
  "cusotmer_middlename" varchar NOT NULL,
  "customer_lastname" varchar NOT NULL,
  "customer_phone_number" varchar NOT NULL,
  "customer_email" varchar NOT NULL,
  "customer_address" text NOT NULL,
  "customer_comment" text DEFAULT null,
  "created_at" timestamp DEFAULT (now())
);

CREATE TABLE "product_orders" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "product_id" integer NOT NULL,
  "order_id" integer NOT NULL,
  "count" integer NOT NULL
);

CREATE TABLE "countries" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar NOT NULL
);

CREATE TABLE "delivery_methods" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar NOT NULL
);

CREATE TABLE "payment_methods" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar NOT NULL
);

CREATE TABLE "shopping_session" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" integer NOT NULL,
  "total_int" integer DEFAULT 0,
  "total_dec" integer DEFAULT 0
);

CREATE TABLE "cart_item" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "session_id" integer NOT NULL,
  "product_id" integer NOT NULL,
  "quantity" integer NOT NULL
);

COMMENT ON COLUMN "users"."password" IS 'hashed version';

ALTER TABLE "products" ADD FOREIGN KEY ("label_id") REFERENCES "labels" ("id");

ALTER TABLE "product_categories" ADD FOREIGN KEY ("product_id") REFERENCES "products" ("id");

ALTER TABLE "product_categories" ADD FOREIGN KEY ("category_id") REFERENCES "categories" ("id");

ALTER TABLE "comments" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "orders" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "orders" ADD FOREIGN KEY ("country_id") REFERENCES "countries" ("id");

ALTER TABLE "orders" ADD FOREIGN KEY ("delivery_method_id") REFERENCES "delivery_methods" ("id");

ALTER TABLE "orders" ADD FOREIGN KEY ("payment_method_id") REFERENCES "payment_methods" ("id");

ALTER TABLE "product_orders" ADD FOREIGN KEY ("product_id") REFERENCES "products" ("id");

ALTER TABLE "product_orders" ADD FOREIGN KEY ("order_id") REFERENCES "orders" ("id");

ALTER TABLE "shopping_session" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "cart_item" ADD FOREIGN KEY ("product_id") REFERENCES "products" ("id");

ALTER TABLE "cart_item" ADD FOREIGN KEY ("session_id") REFERENCES "shopping_session" ("id") ON DELETE CASCADE;
