// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: product_orders.sql

package db

import (
	"context"
)

const addProductToOrder = `-- name: AddProductToOrder :many
INSERT INTO product_orders
(order_id, product_id, count)
VALUES ($1, $2, $3)
RETURNING id, product_id, order_id, count
`

type AddProductToOrderParams struct {
	OrderID   int32 `json:"order_id"`
	ProductID int32 `json:"product_id"`
	Count     int32 `json:"count"`
}

func (q *Queries) AddProductToOrder(ctx context.Context, arg AddProductToOrderParams) ([]ProductOrder, error) {
	rows, err := q.db.QueryContext(ctx, addProductToOrder, arg.OrderID, arg.ProductID, arg.Count)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []ProductOrder
	for rows.Next() {
		var i ProductOrder
		if err := rows.Scan(
			&i.ID,
			&i.ProductID,
			&i.OrderID,
			&i.Count,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
